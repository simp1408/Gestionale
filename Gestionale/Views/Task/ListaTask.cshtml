@model IEnumerable<Gestionale.Models.Task>


@{
    ViewBag.Title = "ListaTask";
}

@*@{
        Html.RenderAction("PartialViewTask");
    }*@
<h2>Le tue Task</h2>
<br />
<hr />
@*<p>
        @Html.ActionLink("Aggiungi Task", "Create")
    </p>*@
@*@using (Html.BeginForm("Edit","Task"))
    {*@

<table class="table fl-table w-50">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.IDtask)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DescrizioneTask)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DataInizio)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DataScadenza)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Utente.Nome)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Utente.Cognome)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StatoTask.Stato)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Priority.LevelPriority)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tbody id="tbody-container">

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.IDtask)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DescrizioneTask)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataInizio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataScadenza)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Utente.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Utente.Cognome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StatoTask.Stato)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Priority.LevelPriority)
                </td>

                <td>

                    <div class="col-md-10 w-25">
                        @Html.DropDownListFor(model => item.IdStatoTask, new SelectList(ViewBag.listaStatoTask, "Value", "Text"), "Seleziona stato task", new { @class = "form-select ", @style = "width:900px;", @id = "idDrop" })

                    </div>
                </td>


                <td>
                    <input type="submit" value="accetta incarico" class="btn" style="background-color: #324960;color:white" />
                    @*@Html.RenderAction("EditIncarico","Task",null,new { id = item.IDtask }, new { @class = "btn", style = "background-color:#324960;color:white;" })*@

                    @*@Html.ActionLink("Delete", "Delete", new { id = item.IDtask }, new { @class = "btn", style = "background-color:red;color:white;" })*@
                </td>

            </tr>
        </tbody>

        <div id="prova">

        </div>


    }


</table>



@*}*@

<script>
    $(document).ready(function () {
        var Drop;
        $("#idDrop").on('change', function () {
            Drop = $(this).val();
        });

        $('input').click(function () {
            alert(Drop);
            $.ajax({
                method: 'POST',
                url: 'ListaTaskJson',
                data: { 'Drop': Drop },
                success: function (data) {

                    $.each(data, function (index, val) {
                   
                        $('#prova').append("<p>" + val.IDtask + "</p>");


                    })
                },
                error: function (xhr, ajaxOption, throwError) {
                    alert(xhr.status);
                    aler(throwError);
                }

            })
        })

    })
</script>






